org: caoimherice
app: food-miles
service: Food-miles

frameworkVersion: '3'

custom:
  tableName: 'users-table-${sls:stage}'
  itemTableName: 'item-table-${sls:stage}'
  shoppingListTableName: 'shopping-list-table-${sls:stage}'
  wsgi:
    app: app.app

provider:
  name: aws
  httpApi:
    cors: true
  runtime: python3.9
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ UsersTable, Arn ]
            - Fn::GetAtt: [ ItemTable, Arn ]
            - Fn::GetAtt: [ ShoppingListTable, Arn ]
  environment:
    USERS_TABLE: ${self:custom.tableName}
    ITEM_TABLE: ${self:custom.itemTableName}
    SHOPPING_LIST_TABLE: ${self:custom.shoppingListTableName}

functions:
  api:
    handler: wsgi_handler.handler
    events:
      - httpApi: '*'
  apiFood:
    handler: wsgi_handler.handler
    events:
      - httpApi:
          path: /food
          method: ANY
  apiShoppingList:
    handler: wsgi_handler.handler
    events:
      - httpApi:
          path: /shoppingList
          method: ANY

plugins:
  - serverless-wsgi
  - serverless-python-requirements

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}
    ItemTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.itemTableName}
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
          - AttributeName: origin
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH
          - AttributeName: origin
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    ShoppingListTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.shoppingListTableName}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: itemId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: itemId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
